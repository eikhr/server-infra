version: '3.8'

services:
  
  traefik:
    image: traefik:v2.10
    command:
      - "--api"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=eik@eikhr.no"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "./data/letsencrypt:/letsencrypt"
      - "./data/traefik:/data"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.eikhr.no`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.middlewares=myauth"
      - "traefik.http.middlewares.myauth.basicauth.usersfile=/data/usersfile"

  calendar-svg:
    build: https://github.com/eikhr/calendar-svg.git
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.calendar-svg.rule=Host(`www.eikhr.no`) && Path(`/calendar.svg`)"
      - "traefik.http.routers.calendar-svg.entrypoints=websecure"
      - "traefik.http.routers.calendar-svg.tls.certresolver=myresolver"
        
  vaultwarden:
    image: vaultwarden/server:latest
    restart: always
    env_file:
      - vaultwarden.env
    volumes:
      - ./data/vaultwarden/:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`bitwarden.eikhr.no`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=myresolver"

  warehouse-server:
    build:
      context: https://github.com/ollfkaih/warehouse.git#docker-server
      dockerfile: server.Dockerfile
    volumes:
      - ./data/warehouse:/root/warehouse
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.warehouse-server.rule=Host(`warehouse.eikhr.no`)"
      - "traefik.http.routers.warehouse-server.entrypoints=websecure"
      - "traefik.http.routers.warehouse-server.tls.certresolver=myresolver"

  groupup-frontend:
    build:
      context: ./groupup
      dockerfile: frontend.Dockerfile
    depends_on:
      - groupup-backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.groupup-frontend.rule=Host(`groupup.eikhr.no`)"
      - "traefik.http.routers.groupup-frontend.entrypoints=websecure"
      - "traefik.http.routers.groupup-frontend.tls.certresolver=myresolver"

  groupup-backend:
    build:
      context: ./groupup
      dockerfile: backend.Dockerfile
    depends_on:
      - groupup-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.groupup-backend.rule=Host(`groupup.eikhr.no`) && PathPrefix(`/api`)"
      - "traefik.http.routers.groupup-backend.entrypoints=websecure"
      - "traefik.http.routers.groupup-backend.tls.certresolver=myresolver"

  groupup-db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: groupup
      POSTGRES_DB: groupupdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/groupup/pgdata:/var/lib/postgresql/data

  filebrowser:
    image: hurlenko/filebrowser
    volumes:
      - ./data/filebrowser/DATA_DIR:/data
      - ./data/filebrowser/CONFIG_DIR:/config
    environment:
      - FB_DATABASE=/data/filebrowser.db
      - FB_BASEURL=/filebrowser
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`www.eikhr.no`) && PathPrefix(`/filebrowser`)"
      - "traefik.http.routers.filebrowser.entrypoints=websecure"
      - "traefik.http.routers.filebrowser.tls.certresolver=myresolver"

  minecraft:
    image: itzg/minecraft-server
    ports:
      - 25565:25565
    environment:
      EULA: "TRUE"
    tty: true
    stdin_open: true
    restart: unless-stopped
    volumes:
      - ./data/minecraft:/data

